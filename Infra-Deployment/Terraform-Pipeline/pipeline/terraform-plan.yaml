  jobs:
    - job: terraform_plan
      steps:
        - checkout: self
        - task: TerraformInstaller@0
          displayName: 'install'
          inputs:
            terraformVersion: '${{ parameters.terraform_version }}'

        - task: TerraformTaskV1@0
          displayName: 'init'
          inputs:
            provider: 'azurerm'
            command: 'init'
            backendServiceArm: '${{ parameters.backendServiceArm }}'
            backendAzureRmResourceGroupName: '${{ parameters.backendAzureRmResourceGroupName }}'
            backendAzureRmStorageAccountName: '${{ parameters.backendAzureRmStorageAccountName }}'
            backendAzureRmContainerName: '${{ parameters.backendAzureRmContainerName }}'
            backendAzureRmKey: '${{ parameters.backendAzureRmKey }}' 
            workingDirectory: '$(System.DefaultWorkingDirectory)/Cluster-Deployment/Terraform/template'

        - task: TerraformTaskV1@0
          displayName: 'plan'
          condition: and(succeeded(), eq(variables['Action'], 'Plan'))
          inputs:
            provider: 'azurerm'
            command: 'plan'
            #commandOptions: '-input=false -var-file="templates/${{ parameters.environment }}.tfvars"'
            commandOptions: '-out=tfplan'
            environmentServiceNameAzureRM: '${{ parameters.backendServiceArm }}'
            workingDirectory: '$(System.DefaultWorkingDirectory)/Infra-Deployment/Terraform-Pipeline/template'